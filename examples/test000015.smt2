(set-logic QF_AUFBV )
(declare-fun fsym0 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun fsym1 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun fsym2 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun fsym3 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun fsym4 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun fsym5 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun fsym6 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun i () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 ((_ zero_extend 24)  (select  i (_ bv0 32) ) ) ) (?B2 ((_ zero_extend 24)  (select  fsym2 (_ bv0 32) ) ) ) (?B3 ((_ zero_extend 24)  (select  fsym1 (_ bv0 32) ) ) ) (?B4 ((_ zero_extend 24)  (select  fsym5 (_ bv0 32) ) ) ) (?B5 ((_ zero_extend 24)  (select  fsym4 (_ bv0 32) ) ) ) (?B6 ((_ zero_extend 24)  (select  fsym3 (_ bv0 32) ) ) ) ) (and  (and  (and  (and  (and  (and  (and  (and  (and  (and  (and  (=  false (bvslt  ?B3 ((_ zero_extend 24)  (select  fsym0 (_ bv0 32) ) ) ) ) (=  false (bvslt  ?B2 ?B3 ) ) ) (=  false (bvslt  ?B6 ?B2 ) ) ) (=  false (bvslt  ?B5 ?B6 ) ) ) (bvslt  ?B4 ?B5 ) ) (=  false (bvslt  ((_ zero_extend 24)  (select  fsym6 (_ bv0 32) ) ) ?B4 ) ) ) (=  (_ bv1 64) (concat  (select  x (_ bv7 32) ) (concat  (select  x (_ bv6 32) ) (concat  (select  x (_ bv5 32) ) (concat  (select  x (_ bv4 32) ) (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) ) ) ) ) (bvsle  (_ bv0 32) ?B1 ) ) (bvsle  ?B1 (_ bv6 32) ) ) (bvsle  ?B1 (_ bv3 32) ) ) (bvsle  ?B1 (_ bv2 32) ) ) (bvsle  ?B1 (_ bv1 32) ) ) ) )
(check-sat)
(exit)
